#!/bin/bash

source ./bin/functions;

# Installing base environment (in future, it'll be with docker, maybe)

blue_info "Base environment installation";

# Update and Upgrade system

blue_info "Software update and upgrade, it may take some minutes";

apt-get -qq update;
apt-get -yqq upgrade;
apt-get -yqq dist-upgrade

## Base

### Because if Mariadb/Mysql is installed it can cause some problems,
### we remove them before reinstall

orange_important "MariaDB and MySQL uninstall to prevent troubles"
DEBIAN_FRONTEND=noninteractive
apt-get remove --purge -yqq mariadb* mysql*
rm -R /etc/mysql
rm -R /var/lib/mysql

blue_info "Installing base packages"

installPackageIfNotExists "inotify-tools"
installPackageIfNotExists "zip";
installPackageIfNotExists "apache2";
installPackageIfNotExists "mariadb-server";
installPackageIfNotExists "bind9";
installPackageIfNotExists "fuse"
installPackageIfNotExists "snapd"

installPackageIfNotExists "php";
installPackageIfNotExists "php-fpm";

# Get the version of PHP, if version is like 7.4.3,
# we truncate for getting a 3 characters version (ex: 7.4)
# and we install php and it's dependencies

PHPVERSION=$(php -r "echo PHP_VERSION;");

if [ ${#PHPVERSION} -eq 5 ]
then
    SHORTPHPVERSION=${PHPVERSION:0:-2}
elif [ ${#PHPVERSION} -eq 6 ]
then
    SHORTPHPVERSION=${PHPVERSION:0:-3}
fi

# Only available in development mode

# blue_info "PHP version is $SHORTPHPVERSION"

installPackageIfNotExists "php$SHORTPHPVERSION-curl"
installPackageIfNotExists "php$SHORTPHPVERSION-mbstring"
installPackageIfNotExists "php$SHORTPHPVERSION-xml"
installPackageIfNotExists "php$SHORTPHPVERSION-zip"
installPackageIfNotExists "php$SHORTPHPVERSION-mysqli"
installPackageIfNotExists "php$SHORTPHPVERSION-pdo"

installPackageIfNotExists "fail2ban"
installPackageIfNotExists "curl"

# Configure database

source $SCRIPTPATH/bin/databaseModifications

# Enable PHP-FPM in apache

a2enmod proxy_fcgi setenvif;
a2enconf php$SHORTPHPVERSION-fpm;

# Add Adminer

rm -R /usr/share/adminer
wget https://adminer.org/latest.php
mkdir /usr/share/adminer
cp latest.php /usr/share/adminer/index.php
chown -R homeserver:homeserver /usr/share/adminer
chmod 0755 /usr/share/adminer
chmod 0755 /usr/share/adminer/index.php
rm latest.php


# Add NodeJS

snap install node --classic &> /dev/null

# Upgrade npm

npm install -gs npm;

# Add yarn to NodeJS

npm install -gs yarn;

# Install the correct certbot for Let's Encrypt

snap install core;
snap refresh core;
snap install --classic certbot;
ln -s /snap/bin/certbot /usr/bin/certbot;

# Install Composer v2

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');";
php composer-setup.php;
php -r "unlink('composer-setup.php');";
cp composer.phar /usr/bin/composer;
orange "Composer is installed globally, you can use \"composer\" command directly";
rm composer.phar;

# Clean useless packages

blue_info "Packages cleaning, it may take some minutes";

apt-get autoclean -yqq;
apt-get autoremove -yqq;
