#!/bin/bash

SCRIPTPATH=$(pwd);

source $SCRIPTPATH/bin/baseVariables;
source $SCRIPTPATH/bin/functions;

if [ $user != root ]
then
    red_warning "You must be root, sorry! Try sudo -s or sudo -i";
    exit 1;
fi

clear;

orange '
    __  __                       ______                             
   / / / /____  ____ ____  ___  / ____/___ ,_________  __ ___ ,______
  / /_/ // __ \/  __` __ \/ _ \/___ \ / _ \/  ___/| | / // _ \/  ___/
 / __  // /_/ /  / / / / /  __/___/ //  __/  /    | |/ //  __/  /    
/_/ /_/ \____/__/ /_/ /_/\___/_____/ \___/__/     |___/ \___/__/     
                                                                         
'

green "This script will install automatically HomeServer and it's dependencies\n";
orange_important "A domain name is absolutely required!";
orange "             if you doesn't have one, type CTRL+C and go buy one\n";
orange_important "For more informations or read the wiki, go to https://github.com/harkhenon/homeserver";
orange_important "This script and this panel are distributed under MIT license\n\n";

sleep 3;

while true
do
    echo -n -e "\e[38;5;135mPlease enter the domain name [example: mydomain.com]: \e[0m" && read fqdn;
    echo -n -e "\n"
    echo -n -e "\e[38;5;135mConfirm the domain name [example: mydomain.com]: \e[0m" && read fqdnconfirm;
    echo -n -e "\n"
    
    if [[ "$fqdn" == "$fqdnconfirm" && ! -z "${fqdn// /}" ]]; then
        break
    else
        red_warning "Domains names doesn't match or are blank, please retry\n"
    fi
done

# Install package base

source $SCRIPTPATH/bin/baseInstall

# Creating/Cleaning the base folder

rm -R /usr/share/homeserver

if [ ! -d $HOMESERVERPATH ]; then
    mkdir /usr/share/homeserver
fi

# Downloading the panel

blue_info "Homeserver download from Github...";
git clone https://github.com/Harkhenon/homeserver.git --branch dev $HOMESERVERPATH;

ln -s /usr/share/adminer $HOMESERVERPATH/public

green_success "Download done";

# Creating filesystem

source $SCRIPTPATH/bin/cleanFilesAndCreateNews

# Add homeserver user

groupadd homeserver;
useradd homeserver -g homeserver -b /home/homeserver;


# Fill .env file

sed 's/{fqdn}/'$fqdn'/g;s/{mysqlpassword}/'$HSPASSWORD'/g;s/{ip}/'$(wget -qO- http://ipecho.net/plain | xargs echo)'/g;s/{env}/development/g;s/{app_key}/'$LARAVEL_APP_KEY'/g' $PATTERNS_PATH/envVariablesIncludeApache.conf > /etc/apache2/HomeserverEnv.conf;

# Set permissions on main folder

green_success "Permissions update";
chown -R homeserver:homeserver /usr/share/homeserver;

# Enabling main websites

blue_info "Enabling virtualhosts"

a2ensite $fqdn;
a2ensite sql.$fqdn;
a2enmod rewrite;
a2enmod env;

# Apache and PHP-FPM restart

blue_info "Apache and PHP restart";

service apache2 restart;
service php$SHORTPHPVERSION-fpm restart;


blue_info "Panel packages update, it may take some minutes";

su homeserver -s /bin/bash -c "composer update --working-dir $HOMESERVERPATH";

green_success "Update done";

blue_info "Database populating"

# Pass Laravel/Homeserver in development mode

sed 's/{fqdn}/'$fqdn'/g;s/{mysqlpassword}/'$HSPASSWORD'/g;s/{ip}/'$(wget -qO- http://ipecho.net/plain | xargs echo)'/g;s/{env}/development/g' $PATTERNS_PATH/dotenv > $HOMESERVERPATH/.env;
chown homeserver:homeserver $HOMESERVERPATH/.env;
su homeserver -s /bin/bash -c "php $HOMESERVERPATH/artisan key:generate -q";

su homeserver -s /bin/bash -c "php $HOMESERVERPATH/artisan migrate:fresh -q";

su homeserver -s /bin/bash -c "php $HOMESERVERPATH/artisan db:seed -q";

# Pass Laravel/Homeserver in production mode (disabled during development)

# rm $HOMESERVERPATH/.env

# sed 's/{fqdn}/'$fqdn'/g;s/{mysqlpassword}/'$HSPASSWORD'/g;s/{ip}/'$(wget -qO- http://ipecho.net/plain | xargs echo)'/g;s/{env}/production/g' $PATTERNS_PATH/dotenv > $HOMESERVERPATH/.env;
# chown homeserver:homeserver $HOMESERVERPATH/.env;
# su homeserver -s /bin/bash -c "php $HOMESERVERPATH/artisan key:generate -q";

su homeserver -s /bin/bash -c "php $HOMESERVERPATH/artisan passport:install --force -q"

service apache2 restart

# Disabled certbot while testing installator

# blue_info "SSL certificate creation";

# certbot --apache --non-interactive --agree-tos -m admin@$fqdn -d $fqdn -d www.$fqdn -d sql.$fqdn;
# green_success "SSL certificate created";

blue_info "Homeserver Core daemon installation..."

cp ./daemon/homeserver /usr/bin/homeserver
cp ./daemon/homeserver.service /etc/systemd/system/homeserver.service
systemctl enable homeserver.service
service homeserver restart

orange_important "To connect to Adminer, enter url: https://sql.$fqdn"
orange_important "MySQL homeserver database password is: $HSPASSWORD, please note it!";
orange_important "Your panel URL is: https://$fqdn, enjoy!";
